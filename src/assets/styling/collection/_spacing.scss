$spacing-unit: 8px;

// Mixin for padding and margin variations
@mixin spacing($class, $property, $sides) {
  $spacing: $spacing-unit;

  @for $i from 1 through 6 {
    .#{$class}-#{$i} {
      @each $side in $sides {
        #{$property}-#{$side}: $spacing * $i !important;
      }
    }
  }
}

// Mixin for gap variations
@mixin gap($property, $unit) {
  @for $i from 1 through 6 {
    .#{$property}-#{$i} {
      #{$property}: $unit * $i !important;
    }
  }
}

// Padding variations
@include spacing("p", "padding", ("top", "bottom", "left", "right"));
@include spacing("pt", "padding", ("top"));
@include spacing("pb", "padding", ("bottom"));
@include spacing("pl", "padding", ("left"));
@include spacing("pr", "padding", ("right"));
@include spacing("px", "padding", ("left", "right"));
@include spacing("py", "padding", ("top", "bottom"));

// Margin variations
@include spacing("m", "margin", ("top", "bottom", "left", "right"));
@include spacing("mt", "margin", ("top"));
@include spacing("mb", "margin", ("bottom"));
@include spacing("ml", "margin", ("left"));
@include spacing("mr", "margin", ("right"));
@include spacing("mx", "margin", ("left", "right"));
@include spacing("my", "margin", ("top", "bottom"));

// Gap variations
@include gap(gap, $spacing-unit);

// Spacing variables
$p: $spacing-unit;
$p-1: $spacing-unit * 1;
$p-2: $spacing-unit * 2;
$p-3: $spacing-unit * 3;
$p-4: $spacing-unit * 4;
$p-5: $spacing-unit * 5;
$p-6: $spacing-unit * 6;

// Spacing variables
$m: $spacing-unit;
$m-1: $spacing-unit * 1;
$m-2: $spacing-unit * 2;
$m-3: $spacing-unit * 3;
$m-4: $spacing-unit * 4;
$m-5: $spacing-unit * 5;
$m-6: $spacing-unit * 6;